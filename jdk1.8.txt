Java 1.8 features
--------------------------
1)Java is Object Oriented programming Language.
2)Java is simpler then c and c++ as we don't have pointer concept,Multiple Inheritance,operator overloading.
3)Java supports multi-threading or multi-tasking.
4)We can develop web-application,network application,standalone application and also mobile application.
5)In java we interface which support the concept of multiple inheritance.
6)In java we have constructor but no destructor.There is automatic garbage clearance.
7)java is secured language.we have 4 access specifier private,public,protected,default.

------------------------------------------
Data types
---------------------------------------------------------
primative datatype
-------------------------
1)byte - 1 byte
2)short - 2 bytes
3)int - 4 bytes
4)long - 8 bytes
5)char - 2 bytes
6)boolen - 1 bit
7)float - 4 bytes
8)double - 8 bytes
-----------------------------------------
derived datatype
----------------------------
1)String
2)array
----------------------------------------
Operator
-------------------
1)unary :-i++,++i,i--,--i

2)binary :-
i)arithmatic :- +,-,*,/,%(modules)
ii)comparative :- <,>,<=,>=
iii)assignment :- =,!=
iv)bitwise :- >>,<<
3)ternary :- :,?
--------------------------------------
we have 4 access specifier private,public,protected,default.

1)private :- if we declare variable and methods as private we can access it within the class only.
2)public :- if we declare variable and methods as public we can access it within the class,outside the class and also outside the package.
3)protected :- if we declare variable and methods as protected we can access it within the class and also outside the child class.
4)default :- if we declare variable and methods as default we can access it within the class ,out side the class but not outside the package.
------------------------------------------------------------------------------------------------------------------------
program-1
----------------
package monday;

public class First
{
public static void main(String[] args) 
{
System.out.println("Welcome to JDK1.8");	
}
}
-------------------------------------------------
program-2
----------------------
package monday;

public class First
{
public static void main(String[] args) 
{
byte a=10;
short b=20;
int c=30;
long d=40;
float e=5.6f;
double f=6.7;
String g="apple";
char h='a';
System.out.println(a+" "+b+" "+c);
System.out.println(d+" "+e+" "+f);
System.out.println(g+" "+h);
}
}
----------------------------------------------------------------
Class :- A class is a known as object framework.
A class contains variables and methods.
---------------------------------------------------------------------
Object is a reference pointer to the class.
We can access the variables and methods of a class using Object.
------------------------------------------------------------------------------
program-3
---------------------
package monday;
import java.lang.*;
import java.util.*;
public class First
{
int empno;
String name,address;
void input()
{
	Scanner ob=new Scanner(System.in);
	System.out.println("enter empno,name,address");
	empno=ob.nextInt();
	name=ob.next();
	address=ob.next();
}
void display()
{
System.out.println("the empno is "+empno);	
System.out.println("the emp name  is "+name);	
System.out.println("the emp address is "+address);	
}
public static void main(String[] args) {
	First obj=new First();
	obj.input();
	obj.display();
}
}

----------------------------------------------------------------------------------
Question-1
wap to enter a student data and display it.
rollno,name,physics,chem,maths marks.
-------------------------------------------------------------------------
Program-4
---------------------
package monday;
import java.lang.*;
import java.util.*;
public class First
{
int rollno;
String name,address;
float phy,chem,math,total;
void input()
{
	Scanner ob=new Scanner(System.in);
	System.out.println("enter rollno,name,address,phy,chem,math");
	rollno=ob.nextInt();
	name=ob.next();
	address=ob.next();
	phy=ob.nextFloat();
	chem=ob.nextFloat();
	math=ob.nextFloat();
}
void display()
{
System.out.println("the rollnono is "+rollno);	
System.out.println("the name  is "+name);	
System.out.println("the address is "+address);	
System.out.println("phy"+phy+" chem"+chem+"math"+math);
System.out.println("the total is "+(phy+chem+math));
}
public static void main(String[] args) {
	First obj=new First();
	obj.input();
	obj.display();
}
}

----------------------------------------------------------------------------------------------------
Constructor
-----------------------------
A constructor is a method which has the same name as that of the class name.
It doesnot return any value.it doesnot have any return type.
There are 2 types of constructor
1)default constructor :- it is without any parameter.
2)parameterized constructor :- it is with parameter.
To access a constructor we require an object.
-----------------------------------------------------
program-5
--------------------
package monday;
import java.util.*;
class first
{
int rollno;//intance variable
String name,address;
first()
{
	System.out.println("this is a default constructor which is without any parameter");
}
first(int rollno,String name,String address)//local variable
{
	this.rollno=rollno;//to differenciate between intance variable and local variable we use this
	this.name=name;//keyword.
	this.address=address;
}
void display()
{
	System.out.println("the rollno is "+rollno);
	System.out.println("the name is "+name);
	System.out.println("the address is "+address);
	}
}
class second
{
public static void main(String[] args) {
	first ob=new first();
	first ob1=new first(101,"ajay","bangalore");
	first ob2=new first(102,"trupti","orissa");
	ob1.display();ob2.display();
}
}
-------------------------------------------------------------
Difference between constructor and a method.
-----------------------------------------------------------------
1)a method can have any name but a constructor will have only the class name .
2)a method returns a value but constructor doesnot return any value.
----------------------
program-6
---------------------
package monday;
import java.util.*;
class first
{
int rollno;//intance variable
String name,address;
first()
{
	System.out.println("this is a default constructor which is without any parameter");
}
first(int rollno,String name,String address)//local variable
{
	this.rollno=rollno;//to differenciate between intance variable and local variable we use this
	this.name=name;//keyword.
	this.address=address;
}
void display()
{
	System.out.println("the rollno is "+rollno);
	System.out.println("the name is "+name);
	System.out.println("the address is "+address);
	}
int sum(int a,int b) //method overloading
{
	return a+b;
}
float sum(float a,float b)
{
	return a+b;
}
}
class second
{
public static void main(String[] args) {
	first ob=new first();
	first ob1=new first(101,"ajay","bangalore");
	first ob2=new first(102,"trupti","orissa");
	ob1.display();ob2.display();
	System.out.println(ob1.sum(6, 6));//compiler will decide where to send the value
	System.out.println(ob1.sum(6.5f, 6.3f));
	
}
}
-----------------------------------------------------------------------
Question-2
wap to create a parameterized constractor .pass the values and display it.
employee :- empno,name,designation,salary.
-------------------------------------------------------------------------------------------------------------
program-7
---------------------
package monday;
import java.util.*;
class first1
{
int empno;//intance variable
String name,address;
first1()
{
	System.out.println("this is a default constructor which is without any parameter");
}
first1(int rollno,String name,String address)//local variable
{
	this.empno=rollno;
	this.name=name;
	this.address=address;
}
void display()
{
	System.out.println("the rollno is "+empno);
	System.out.println("the name is "+name);
	System.out.println("the address is "+address);
	}

}
class second2
{
public static void main(String[] args) {
	first1 ob=new first1();
	first1 ob1=new first1(101,"ajay","bangalore");
	first1 ob2=new first1(102,"trupti","orissa");
	ob1.display();ob2.display();
	
}
}
------------------------------------------------------------------------------------
setter() is used to set the values
getter() is used to get the values
-----------------------------------------------------------------
program-8
-----------------------
package monday;

public class Employee 
{
int empno;
String name,designation;
float salary;
//right click >source >generate getter and setter
public int getEmpno() {
	return empno;
}
public void setEmpno(int empno) {
	this.empno = empno;
}
public String getName() {
	return name;
}
public void setName(String name) {
	this.name = name;
}
public String getDesignation() {
	return designation;
}
public void setDesignation(String designation) {
	this.designation = designation;
}
public float getSalary() {
	return salary;
}
public void setSalary(float salary) {
	this.salary = salary;
}


}
------------------------------------------------------------
package Wednesday;

public class Student 
{
int rollno;
String name,email;
public int getRollno() {
	return rollno;
}
public void setRollno(int rollno) {
	this.rollno = rollno;
}
public String getName() {
	return name;
}
public void setName(String name) {
	this.name = name;
}
public String getEmail() {
	return email;
}
public void setEmail(String email) {
	this.email = email;
}

}
--------------------------------------------------------------------------
package Tuesday;
import Wednesday.Student;
import monday.Employee;
public class Test 
{
public static void main(String[] args)
{
	Employee ob=new Employee();
	ob.setEmpno(101);
	ob.setName("Trupti");
	ob.setDesignation("software eng");
	ob.setSalary(45000.50f);
	System.out.println(ob.getEmpno());
	System.out.println(ob.getName());
	System.out.println(ob.getSalary());
	System.out.println(ob.getDesignation());
	Student ob1=new Student();
	ob1.setRollno(102);
	ob1.setName("Madhu");
	ob1.setEmail("Madhu@gmail.com");
	System.out.println(ob1.getRollno());
	System.out.println(ob1.getName());
	System.out.println(ob1.getEmail());
}
}

---------------------------------------------------------------------------------------------
Program-9
-------------------
package Tuesday;
import java.util.*;
public class ArrayDemo 
{
public static void main(String[] args) 
{
Scanner ob=new Scanner(System.in);
System.out.println("enter 5 nos");
int a[]=new int[5];
for(int i=0;i<5;i++)
	a[i]=ob.nextInt();

System.out.println("the 5 nos are");
for(int i=0;i<5;i++)
	System.out.println(a[i]);
}
}
----------------------------------------------------------
Program-10
--------------------
package Tuesday;
import java.util.*;
public class Student1 
{
	String rollno,name,address;
	void input()
	{
		Scanner ob=new Scanner(System.in);
		System.out.println("Enter rollno,name,address");
		rollno=ob.nextLine();//it excepts space in between
		name=ob.nextLine();
		address=ob.nextLine();
	}
	void display()
	{
		System.out.println("the rollno is "+rollno);
		System.out.println("the name is "+name);
		System.out.println("the address is "+address);
	}
	public static void main(String[] args) {
		Student1[] obj=new Student1[3];
		for(int i=0;i<3;i++)
		{
			System.out.println("enter data of student no"+(i+1));
			obj[i]=new Student1();
			obj[i].input();
		}
		for(int i=0;i<3;i++)
		{
			System.out.println("data of student no"+(i+1));
			obj[i].display();
		}

	}
}
----------------------------------------------------------------------
question-3
create a bank class 
accno,name,email,Balance for 20 customers.
store the data and display it.
-------------------------------------------------------------------------------
Inheritance
----------------------
It is one of the oops concept
Reuse of existing code.and we can add some more features to it.
example :- iPhone10 to iPhone11 some new features are add to the older version.
There are 5 types of Inheritance.
1)single Inheritance
2)multi-level Inheritance
3)hyrarchal Inheritance
----------------------Java doesn't support---------------------------------
4)multiple inheritance
5)Hybrid inheritance(combination)
------------------------------------------------------------------------------------
we use the keyword extends to inherite the parent class into the child class.
we use the keyword super to access the parent class variables and methods into the child class.
-------------------------------------------------------------------------------------
Program-11
------------------------
package Tuesday;
import java.util.*;
public class Student 
{
int rollno;
String name,address;
void input()
{
	Scanner ob=new Scanner(System.in);
	System.out.println("enter rollno,name,address");
	rollno=ob.nextInt();
	name=ob.next();
	address=ob.next();
}
void display()
{
	System.out.println("the rollno is"+rollno+"the name is "+name+"the address is "+address);
}
}
--------------------------------------------------------
package Tuesday;
import java.util.*;
public class Marks extends Student
{
int phy,chem,math,total,avg;
String grade;
void input()
{
	super.input();
	Scanner ob=new Scanner(System.in);
	System.out.println("enter phy,chem,math marks");
	phy=ob.nextInt();
	chem=ob.nextInt();
	math=ob.nextInt();
	total=phy+chem+math;
	avg=total/3;
	if(avg>70)
		grade="First Grade";
	else if(avg>60)
		grade="Second Grade";
	else if(avg>50)
		grade="Third Grade";
	else
		grade="Fail";
}
void display()
{
	super.display();
	System.out.println("the total is "+total);
	System.out.println("the average is "+avg);
	System.out.println("The grade is "+grade);
}
public static void main(String[] args)
{
	Marks ob=new Marks();
	ob.input();
	ob.display();
}
}
--------------------------------------------------------------------------------
wap to create a multi-level Inheritance
employee class :-empno,name,address
dept class:- loc,designation,dept
salary class :- salary,Hra,Itax
display the employee details
-----------------------------------------------------------------------------
How to use constructor during inheritance.
--------------------------------------------------------------------
program-12
----------------------------
package Tuesday;
public class Student 
{
int rollno;
String name,address;
Student(int rollno,String name,String address)
{
	this.rollno=rollno;
	this.name=name;
	this.address=address;
}
void display()
{
	System.out.println("the rollno is"+rollno+"the name is "+name+"the address is "+address);
}
}

-------------------------------------------------------------------------------------------
package Tuesday;
import java.util.*;
public class Marks extends Student
{
int phy,chem,math,total,avg;
String grade;
Marks(int rollno,String name,String address,int phy,int chem,int math)
{
	super(rollno,name,address);
	this.phy=phy;
	this.chem=chem;
	this.math=math;
	total=phy+chem+math;
	avg=total/3;
	if(avg>=70)
		grade="First Grade";
	else if(avg>=60)
		grade="Second Grade";
	else if(avg>=50)
		grade="Third Grade";
	else
		grade="Fail";
}
void display()
{
	super.display();
	System.out.println("the total is "+total);
	System.out.println("the average is "+avg);
	System.out.println("The grade is "+grade);
}
public static void main(String[] args)
{
	Marks ob=new Marks(101,"sandip","Bangalore",77,88,66);
	ob.display();
}
}
--------------------------------------------------------------------------------------------
program-13
-------------------------
package Tuesday;
public class Student 
{
int rollno;
String name,address;
Student(int rollno,String name,String address)
{
	this.rollno=rollno;
	this.name=name;
	this.address=address;
}
void display()
{
	System.out.println("the rollno is"+rollno+"the name is "+name+"the address is "+address);
}
}
-------------------------------------------------
package Tuesday;
import java.util.*;
public class Marks extends Student
{
int phy,chem,math,total,avg;
String grade;
Marks(int rollno,String name,String address,int phy,int chem,int math)
{
	super(rollno,name,address);
	this.phy=phy;
	this.chem=chem;
	this.math=math;
	total=phy+chem+math;
	avg=total/3;
	if(avg>=70)
		grade="First Grade";
	else if(avg>=60)
		grade="Second Grade";
	else if(avg>=50)
		grade="Third Grade";
	else
		grade="Fail";
}
void display()
{
	super.display();
	System.out.println("the total is "+total);
	System.out.println("the average is "+avg);
	System.out.println("The grade is "+grade);
}

}
----------------------------------------------------------------------
package Tuesday;

public class Address extends Marks
{
	String loc;
	Address(int rollno, String name, String address, int phy, int chem, int math,String loc) 
	{
		super(rollno, name, address, phy, chem, math);
	this.loc=loc;
	}
void display()
{
	super.display();
	System.out.println("the location is "+loc);
}
public static void main(String[] args) {
	Address ob=new Address(1001,"sandip","Bangalore",77,77,55,"north bangalore");
	ob.display();
}
}
-------------------------------------------------------------------------
*super constructor will execute first.
-----------------------------------------------------------------------


































